:toc: macro

Back to the link:Guide%3AMicrosoft-Windows-in-DOSBox‐X[Microsoft Windows in DOSBox-X]

# Installing Microsoft Windows 98 in DOSBox-X

image::images/Windows:Windows_98_SPLASH.png[Windows 98 splash screen]

toc::[]

# Overview
This guide will give a general description of installing Windows 98 in DOSBox-X, in addition to addressing some common issues.

## Windows editions this guide applies to

* Windows 98 (RTM; Original release) - Retail Full
* Windows 98 (RTM; Original release) - OEM Full
* Windows 98 Second Edition (98SE) - Retail Full
* Windows 98 Second Edition (98SE) - OEM Full

NOTE: Windows 98 or 98SE **Upgrade** editions have additional requirements and are not covered by this guide.

If you don't know which Windows 98 edition to install, we recommend that you install **Windows 98SE**.

## External links
* link:http://vogonsdrivers.com/[VOGONS Vintage Driver Library]
* link:https://en.wikipedia.org/wiki/Windows_98[Wikipedia: Windows 98]
* link:https://microsoft.fandom.com/wiki/Windows_98[Fandom: Windows 98]
* link:https://betawiki.net/wiki/Windows_98[Betawiki: Windows 98]

# DOSBox-X config file
You first need to create a DOSBox-X config file.
....
[sdl]
autolock=true

[dosbox]
title=Windows 98
memsize=128

[video]
vmemsize=8
vesa modelist width limit=0
vesa modelist height limit=0

[dos]
ver=7.1
hard drive data rate limit=0

[cpu]
cputype=pentium_mmx
core=normal

[sblaster]
sbtype=sb16vibra

[fdc, primary]
int13fakev86io=true

[ide, primary]
int13fakeio=true
int13fakev86io=true

[ide, secondary]
int13fakeio=true
int13fakev86io=true
cd-rom insertion delay=4000

[render]
scaler=none

[autoexec]
....

Copy the above config and save it as *win98.conf*

NOTE: You can increase the allocated RAM up to the Windows 98 maximum of 512MB by setting ``memsize=512``.
Larger values may be possible with tweaks but are not covered here.

# General installation Notes

* Some parts of the installation can take a considerable amount of time. You can speed this up somewhat by using the DOSBox-X Turbo mode. From the drop-down menu select "CPU" followed by "Turbo (Fast Forward)". But if you decide to use this, be sure to disable Turbo mode whenever you need to enter data or make choices, as it can cause spurious keypresses to be registered causing undesirable effects. It can also cause problems with double click with the mouse not working and audio will also not sound properly, so be sure to disable it when using Windows in DOSBox-X.
* When creating your HDD image with ``IMGMAKE``, instead of specifying a custom size, you can choose a pre-defined template. The pre-defined HDD templates can be seen by running ``IMGMAKE`` without arguments.

# Dynamic vs Normal core
Starting with DOSBox-X 0.83.10 the dynamic_x86 core, which should perform much better, has been sufficiently enhanced that it can now be used for most use-cases with Windows 98.

However, for now we still recommend that you do the installation of Windows 98 using ``core=normal`` until issue link:https://github.com/joncampbell123/dosbox-x/issues/2215[#2215] is resolved.

But after the installation is finished you should be able to change to ``core=dynamic_x86``.

Should you run into problems such as application crashes or a Windows 98 blue-screen that cannot be reproduced with ``core=normal``,  please report the problem on the DOSBox-X Git link:https://github.com/joncampbell123/dosbox-x/issues[issues] page.

# Creating a Harddisk image

NOTE: In addition to the below DOSBox-X command line utility, starting with DOSBox-X 0.83.9 it is possible to create harddisk images from the DOSBox-X menu.
Go to the "DOS" menu and select "Create blank disk image…​".
This option allows for various common harddisk types to be created, for less common types you need to use the command line utility.

Some quick rules about IMGMAKE (for more detail, see: link:Guide%3AManaging-image-files-in-DOSBox%E2%80%90X[Guide: Managing image files in DOSBox-X]):

- Diskette (floppy) images are always created as FAT12.
- If your reported DOS version is 7.1 or higher, then harddisk images up to 512MB will use FAT16 by default.
- Larger size harddisk images will use FAT32 by default (larger than 2GB can only be created as FAT32).

Alternatively, you can use the ``-fat`` option to instruct ``IMGMAKE`` to create a certain FAT type (assuming that is possible for the harddisk size).

First you need to start DOSBox-X from the command-line, using your newly created win98.conf.
This assumes that dosbox-x is in your path and win98.conf is in your current directory.
....
dosbox-x -conf win98.conf
....
Then in DOSBox-X you need to create a new harddisk image file with ``IMGMAKE``.

This example uses an 8GB hard disk image with a single FAT32 formatted partition.
Technically the FAT32 filesystem is capable of supporting partitions up to 2TB, but the generic IDE driver in Windows 98 cannot handle volumes greater than 128GB.
Larger partition sizes may be possible with 3rd party drivers but are not covered here.

In later Windows versions, starting with Windows 2000, Microsoft won't let you format a volume bigger than 32GB with FAT32 using its built-in formatting tool, this was presumably to push migrations to NTFS and later exFAT.

NOTE: Creating a 128GB volume will cause a "SU0650 Out of Memory" warning during install, you can however continue the installation.
....
IMGMAKE hdd.img -t hd_8gig
....

Or if you want to create a larger disk, you can create a custom type.
This is an example of a 16GB (16*1024=16384 MB) disk, which due to its size, will be formatted as FAT32.
....
IMGMAKE hdd.img -t hd -size 16384
....

# Installation Method 1: Boot from CD-ROM image
Starting with Windows 98, it is possible to boot directly from the CD-ROM, as long as you have the "OEM Full" edition, in which case no separate bootdisk is needed.

This installation method allows both FAT16 (up to 2GB) and FAT32 volumes, which can be up to 128GB for Windows 98.

## Requirements

* DOSBox-X 0.83.10 or later, these instructions will NOT work with other DOSBox forks.
* Windows 98 *OEM Full* edition CD-ROM image (named "Win98.iso" in the example below).

Getting this image file is outside the scope of this guide.

## Starting the installation
This assumes you have already started DOSBox-X with the win98.conf config file and created your harddisk image.

First mount the harddisk image you created earlier:
....
IMGMOUNT C hdd.img
....
Now let’s boot from the CD-ROM and start the installation.
....
IMGMOUNT D Win98.iso
IMGMOUNT A -bootcd D
BOOT A:
....

NOTE: If the second ``IMGMOUNT`` command gives an error "*El Torito CD-ROM boot record not found*", your CD-ROM image is not bootable, and you will have to use either a different installation method or a different Windows 98 CD-ROM image.

You will first get a Startup menu, where you need to select "Boot from CD-ROM".

At this point it should format the harddisk and the installation process should start.

When the Windows installer reboots, and your back at the DOSBox-X ``Z:\>`` prompt.
Close DOSBox-X and edit your win98.conf config file, and add the following lines in the [autoexec] section at the end of the file:

....
IMGMOUNT C hdd.img
IMGMOUNT D Win98.iso
BOOT C:
....

Now start DOSBox-X as follows to continue the installation process:

....
dosbox-x -conf win98.conf
....

## Transfer Windows 98 install files to your HDD image
This is an optional step. It is to prevent Windows from asking for the CD-ROM whenever it needs additional files.

Boot Windows 98 with the CD-ROM image mounted. In Windows 98, copy the \WIN98 directory and its contents from the CD-ROM to your C: drive.
You can copy it to any directory you want, but we assume here that you copied it to C:\WIN98

Once the files are copied, start REGEDIT and navigate to ``HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Setup`` and change ``SourcePath=`` to the location where you copied the files. e.g., ``SourcePath=C:\WIN98``

In the case of Windows 98SE, copying the entire directory will require roughly 174MB of diskspace.
The \WIN98\OLS and \WIN98\TOUR sub-directories can however be skipped which will save roughly 54MB, bringing the total to roughly 120MB.

# Installation Method 2

This method will start the install from DOSBox-X and does not require a bootable CD-ROM image.

## Requirements

* DOSBox-X 0.83.10 or later, these instructions will NOT work with other DOSBox forks.
* Windows 98 CD-ROM image (named "Win98.iso" in the example below).

Getting this image file is outside the scope of this guide.

## Starting the installation
This assumes you have already started DOSBox-X with the win98.conf config file and created your harddisk image.

First mount the harddisk image you created earlier:
....
IMGMOUNT C hdd.img
....
You will also need to mount the Windows 98 CD-ROM. There are a few ways of doing so, but this guide assumes you have a ISO image.

If you have a copy of the Windows 98 CD-ROM as an ISO (or a cue/bin pair), you can mount it as follows:
....
IMGMOUNT D Win98.iso
....

## Copying the contents of the CD-ROM
While not strictly necessary, as it is possible to run SETUP.EXE directly from the CD-ROM (if you have the CD-ROM automatically mounted in your [autoexec] section of the config file).
It is recommended to copy the installation files (contents of the WIN98 directory on the CD-ROM) to your HDD image, as it will prevent Windows 98 from asking for the CD-ROM when it needs additional files later.

....
XCOPY D:\WIN98 C:\WIN98 /I /E
....

The files in the above example are copied to the C:\WIN98 directory.
You may want to use ``C:\WINDOWS\OPTIONS\CABS`` instead, as that is the directory that OEM installs normally use.
But if you do, be aware that the installer will attempt to install into ``C:\WINDOWS.000`` as ``C:\WINDOWS`` already exists.

image::images/Windows:Windows_98_SETUP_02.png[Windows 98 SETUP.EXE Select Directory]

If you get the above screen during SETUP, select "Other directory" to change it back to ``C:\WINDOWS``

## Running SETUP.EXE
You can now run SETUP.EXE.

....
C:
CD \WIN98
SETUP
....

image::images/Windows:Windows_98_SETUP_01.png[Windows 98 SETUP.EXE Welcome]

Now run through the install process.
The actual steps will not be covered in this guide but are pretty self-explanatory and detailed guides on the Windows 98 install process can be found online such as youtube.

When the installer reboots DOSBox-X, and your back at the DOSBox-X ``Z:\`` prompt, type ``EXIT``.

Now edit your ``win98.conf`` config file.
At the end of the file, in the [autoexec] section, add the following two lines:

....
IMGMOUNT C hdd.img
BOOT C:
....

Save the config file, and at the command-prompt of your host PC you can type the below command to continue with the next phase of the installation process.
This is also the command you use, after the installation is finished, to start Windows 98 in DOSBox-X.

....
dosbox-x -conf win98.conf
....

# Booting Windows 98 after installation
After the installation is finished, you can start Windows 98 from the command-prompt of your host PC, with the following command:

....
dosbox-x -conf win98.conf
....

You can optionally create a shortcut on your desktop to start Windows 98 directly.

# Steps to take after installation
Once Windows 98 is installed, here is some additional software you may want to install or update:

* Install Microsoft .NET framework version 1.0, 1.1 and 2.0
* Install Visual C++ 2005 runtime
* Update to Internet Explorer 6.0 (rarely needed)
* Update to DirectX 9.0c
* Install Windows Installer 2.0
* Install WinG 1.0 (needed by just a few games, and those games typically include it)
* Install GDI+ redistributable
* Install/Update to Adobe Flash Player 9.0.47.0
* Install Apple Quicktime 6.5.2

This may also be of interest: link:https://msfn.org/board/topic/105936-last-versions-of-software-for-windows-98se/[Forum thread about: Last versions of software for Windows 98SE]

# Mounting CD or Diskette images
DOSBox-X supports mounting CD and diskette (floppy) images, and making those available to a OS booted in DOSBox-X.
But only if the image files are specified before starting real DOS or Windows 9x.
The option to load image files from the menu bar becomes unavailable the moment you boot DOS or Win9x in DOSBox-X.

This is a known limitation that hopefully will be resolved in the near future.

For now, you can work around it, by specifying multiple image files with the IMGMOUNT command as such:
....
IMGMOUNT A disk1.img disk2.img disk3.img
IMGMOUNT D cd1.iso cd2.iso cd3.iso
....
You can then swap between disk images with the swap option from the menu.

# Enabling networking
To enable networking, you first need to enable NE2000 adapter emulation in your win98.conf config file and select an appropriate back-end for the NE2000 emulation.

## Enabling NE2000 in your DOSBox-X config file

Starting with DOSBox-X 0.83.12 there are two different back-ends to the NE2000 adapter emulation.
The default is ``backend=pcap``.

### backend=pcap
The PCAP back-end uses something called "Promiscuous mode".
This has the advantage that DOSBox-X can support various legacy network protocols, such as IPX and NetBIOS Frames (aka NetBEUI) in addition to TCP/IP.
This mode not only allows communication between DOSBox-X instances on the same network, but also with legacy PCs on the same network.

However, for this to work DOSBox-X needs to have very low-level access to your real network adapter.
In some cases, this is not possible, such as:

- Network Adapter or Driver not supporting Promiscuous mode (most WIFI, WAN and BT adapters fall into this category).
- Your Ethernet switch not allowing multiple MAC addresses on a single port or doing any kind of MAC address whitelisting.
- Sandboxed versions of DOSBox-X (e.g., Flatpak) not allowing the required low-level access.

To enable NE2000 emulation with the pcap back-end, add the following to your win98.conf config file:

....
[ne2000]
ne2000=true
nicirq=10
backend=pcap

[ethernet, pcap]
realnic=list
....

The ''list'' value for ''realnic='' will need to be replaced by a value representing your actual network adapter.
See link:Guide%3ASetting-up-networking-in-DOSBox%E2%80%90X[Guide: Setting up networking in DOSBox-X] for more information.

### backend=slirp
Unlike the PCAP back-end, the SLIRP back-end does not require Promiscuous mode.
As such it will work with WIFI, WAN and BT adapters, and it will work in most sandboxed environments.

But obviously, it has its own limitations.

- For now, it only works on Linux.
- It only supports the TCP/IP protocol (other protocols must be TCP/IP encapsulated).
- It is effectively behind a NAT gateway, meaning that you can communicate outbound, but no systems on the LAN can instantiate a new connection to it. Which means that two DOSBox-X instances on the same LAN using ``backend=slirp`` cannot communicate with each other.

To enable NE2000 emulation with the slirp back-end, add the following to your win98.conf config file:

....
[ne2000]
ne2000=true
nicirq=10
backend=slirp
....

## Setting up NE2000 networking
If you enabled NE2000 support in the DOSBox-X config file, Windows 98 should detect it during installation, and you should get a screen like the following.

image::images/Windows:Windows_98_SETUP_03.png[Windows 98 SETUP.EXE NE2000 Properties]

Change the Interrupt (IRQ) to 10 to match the ``nicirq=`` value set in your ``win98.conf`` file.

If Windows 98 did not detect the adapter during installation, or you enabled NE2000 emulation after you did the installation.
Go to "Start", "Settings" and "Control Panel" and double-click on "Add New Hardware", and let the wizard detect hardware.
It should find the emulated Novell NE2000 adapter and install the drivers.

NOTE: By default, TCP/IP will try to get its network configuration over DHCP, if you need to manually specify the settings you can do so, in "Control Panel", double-click "Network".
Once it opens, highlight "TCP/IP", and click the "Properties" button to modify the TCP/IP settings.

NOTE: In the Network settings, there will also be a "Dial-Up Adapter" listed, which you can safely remove.

NOTE: If you don't want the Windows logon dialog on startup, and don't care for file and printer sharing, you can remove the "Client for Microsoft Networks" component from the Network configuration settings (although it will complain that "Your network is not complete", which you can ignore).

NOTE: If you want to share files between Windows 98 and Windows 10 on the network, have a look at this blog: link:http://kishy.ca/?p=1511[SMB File Sharing between Win10 and Win98], but apparently this fails with the latest Win10 builds 2004 and 20H2.

If networking does not work, see link:Guide%3ASetting-up-networking-in-DOSBox%E2%80%90X[Guide: Setting up networking in DOSBox-X]

# Emulated video adapter and video mode
The default video adapter that DOSBox-X emulates is the S3 Trio64, which is the best emulated video adapter that DOSBox-X offers, with the widest range of resolutions and colour depths.
In addition, this video adapter is supported out-of-the-box in Windows 98, simplifying the installation process.

The available video modes with the S3 Trio64 driver are:

* 4-bit colour (16): 640x480
* 8-bit colour (256): 640x480, 800x600, 1024x768, 1152x864, 1280x1024 and 1600x1200
* 16-bit colour (65536): 640x480, 800x600 and 1024x768
* 32-bit colour (16.7M): 640x480 and 800x600

A few enhancements have been made to the emulated S3 Trio64, compared to a real S3 Trio64:

* No real S3 Trio64 was ever produced with more than 4MB video memory, under DOSBox-X you can optionally configure 8MB.
* The real cards never supported wide-screen resolutions, wide-screen VESA modes can optionally be enabled in DOSBox-X.

However, these enhancements cannot be used in Windows 98 with the S3 video driver due to driver limitations.
And no updated S3 Trio64 video driver is available for Windows 98.
As such you will be limited to the above video modes with this driver.

### VESA driver
These restrictions can be overcome by switching to the link:https://bearwindows.zcm.com.au/vbe9x.htm[Universal VESA/VBE Video Display Driver (VBEMP)].

First add the following lines to your DOSBox-X config file in the [video] section:
....
allow high definition vesa modes=true
allow unusual vesa modes=true
allow low resolution vesa modes=false
....
Download and extract the latest VBEMP driver package and install the driver from the 032MB directory.

With these settings modes up to 1920x1080 in 32bit colour, or 1920x1440 in 16bit colour are possible.

NOTE: Using the VBEMP driver does have a negative graphics performance impact, which when measured in WinBench96 Graphics WinMark, can be a reduction of up to 59%.

# Emulated sound card
The emulated sound card used in this guide is the SB16 Vibra, instead of the default SB16.
This is simply because the SB16 Vibra is an ISA PnP card, and therefore automatically detected by Windows.
There is no other real advantage of using the emulated SB16 Vibra over the SB16.

Both Windows 98 and 98SE include SB16 driver version 4.37.00.1998.
An optional driver link:http://vogonsdrivers.com/getfile.php?fileid=50&menustate=0[update to 4.38.14] is available on the VOGONS Vintage Driver Library.

NOTE: One often heard complaint of the real SB16 Vibra is its CQM synthesis, which was used as a low-cost replacement of the OPL3 chip found on earlier cards.
However, DOSBox-X does not really emulate the CQM, instead if uses the same OPL3 emulation as for the regular SB16 model.
Therefore, the CQM sound quality issues with the real SB16 Vibra do not apply to DOSBox-X.

## Enabling General MIDI
If you have a working DOSBox-X General MIDI setup, either emulated or real, you can use that in Windows 98.

Go to "Start", "Settings" and open "Control Panel", and then double-click on "Multimedia Properties".

Now on the "MIDI" tab, change the "Single instrument" option to "SB16 MIDI Out [330]", and click OK to close the window.

image::images/Windows:Windows_98_MIDI.png[Windows 98 MIDI setup]

For more information about setting up MIDI support, see link:Guide%3ASetting-up-MIDI-in-DOSBox%E2%80%90X[Guide: Setting up MIDI in DOSBox-X]

# Enabling printing
To enable printing support in Windows 98, see: link:Guide%3ASetting-up-printing-in-DOSBox%E2%80%90X[Guide: Setting up printing in DOSBox-X]

# 3dfx Voodoo
The emulated 3dfx Voodoo PCI device is enabled by default in DOSBox-X, and both Windows 98 and 98SE include a driver and will automatically detect it.

Windows 98SE includes a driver dated 4-23-1999. There is a link:https://www.philscomputerlab.com/drivers-for-voodoo.html[3.01.00 update] available.
After the update it will show a date of 4-29-1999.

If for some reason you do not want 3dfx Voodoo emulation, it can be disabled by adding the following lines to your DOSBox-X config:
....
[voodoo]
voodoo_card=false
....

### Glide pass-through

Starting with DOSBox-X 0.83.10 it is possible to use glide pass-through with Windows 98.
There are however a few points you need to be aware of.

* The DOSBox-X and glide-wrapper installed on the host need to be the same architecture.
So, if you're using a 64bit DOSBox-X, you need to use a 64-bit glide-wrapper.
* The Linux SDL2 DOSBox-X does not work with OpenGlide, this is a limitation of OpenGlide (see OpenGlide issue link:https://github.com/voyageur/openglide/issues/20[#20]).
The work-around is to use the SDL1 DOSBox-X instead.

You need to set the following DOSBox-X config option:

....
[voodoo]
glide=true
....

You will also need a specially patched link:https://www.vogons.org/download/file.php?id=102360[GLIDE2X.DLL] which you can place in either the ``C:\Windows\System`` directory of Windows 98, or in the game directory.
But be aware that some games come with their own GLIDE2X.DLL, which typically gets installed in the game directory.
If so, you will have to remove this DLL file for glide pass-through to work.

For more detail on 3dfx Voodoo emulation, see the link:Guide%3ASetting-up-3dfx-Voodoo-in-DOSBox%E2%80%90X[Guide: Setting up 3dfx Voodoo in DOSBox-X]

# Hard Disk Read-ahead optimization
In "System Properties", select the "Performance" tab, and click the "File System..." button.
A separate "File System Properties" window will open.
On the "Hard Disk" tab you can specify the Read-ahead optimization.

Based on benchmark results (WinBench 96), it seems that setting this to "None" gives the best performance in combination with DOSBox-X, although the difference is marginal.
This is no doubt because the host system is better at caching then the Windows 98 cache function.

# Outstanding issues
* Resolve "Drive A is using MS-DOS compatibility mode file system"
